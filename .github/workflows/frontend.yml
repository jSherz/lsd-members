name: 'frontend'

on:
  push:
  pull_request:

defaults:
  run:
    shell: bash
    working-directory: frontend

jobs:
  install:
    name: install
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache-dependency-path: frontend/package-lock.json

      - name: Update NPM
        run: npm install --location=global npm@~8.11

      - name: Install dependencies
        run: NODE_ENV=development npm ci

  lint:
    name: lint
    runs-on: ubuntu-20.04

    needs:
      - install

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '11'
          cache: 'sbt'

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache-dependency-path: frontend/package-lock.json

      - name: Update NPM
        run: npm install --location=global npm@~8.11

      - name: Install dependencies
        run: NODE_ENV=development npm ci

      - name: Lint
        run: npm run lint

  test:
    name: test
    runs-on: ubuntu-20.04

    needs:
      - install

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache-dependency-path: frontend/package-lock.json

      - name: Update NPM
        run: npm install --location=global npm@~8.11

      - name: Install dependencies
        run: NODE_ENV=development npm ci

      - name: Test
        run: npm run test-ci

  build:
    name: build
    runs-on: ubuntu-20.04

    needs:
      - install

    env:
      NODE_ENV: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache-dependency-path: frontend/package-lock.json

      - name: Update NPM
        run: npm install --location=global npm@~8.11

      - name: Install dependencies
        run: NODE_ENV=development npm ci

      - name: Build
        run: |
          npm run build
          cd dist
          tar -cf ../dist.tar.gz .
          ls
          cd ..
          ls

      - name: Archive built website
        uses: actions/upload-artifact@v3
        with:
          name: built-website
          path: dist.tar.gz
          if-no-files-found: error

  deploy:
    name: 'deploy'
    runs-on: ubuntu-20.04

    if: success() && github.ref == 'refs/heads/master'

    needs:
      - build
      - lint
      - test

    defaults:
      run:
        shell: bash

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: built-website

      - name: Extract built website
        run: |
          mkdir dist
          cd dist
          tar -xf ../dist.tar.gz

      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::262312054792:role/lsd-com-github-actions
          aws-region: eu-west-1

      - name: Sync files to S3
        run: |
          aws s3 sync \
            --metadata-directive REPLACE \
            --cache-control "max-age=86400" \
            dist/ s3://lsd-prod-lsd-com-website/

      - name: Clear cache
        run: |
          DISTRIBUTION_ID=$(aws cloudfront list-distributions | jq --raw-output '.DistributionList.Items | map(select((.Aliases.Quantity >= 1) and (.Aliases.Items | contains(["leedsskydivers.com"])))) | .[0].Id')

          export PAGER=""
          aws cloudfront create-invalidation --distribution-id ${DISTRIBUTION_ID} --path '/*'
